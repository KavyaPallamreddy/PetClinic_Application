pipeline {
  agent any
    tools {
      maven 'Maven'
      jdk 'JDK11'
    }
	stages {
      stage('Build maven ') {
        steps {      
               bat 'mvn  clean install package'
              }
        }
	  stage('Static code analysis'){
            steps{
                script{
                    withSonarQubeEnv(credentialsId: 'sonarqube') {
                        bat 'mvn clean package sonar:sonar'
                    }
                   }
                }
            }
	 	  
      stage('Copy Artifact') {
        steps {         
		     bat 'copy C:\\ProgramData\\Jenkins\\.jenkins\\workspace\\petcline-application\\target\\*.jar C:\\ProgramData\\Jenkins\\.jenkins\\workspace\\petcline-application\\docker'
                    }
                 }
      stage('Build and Push Docker Image') {
       environment {
         DOCKER_IMAGE= "kavyapallamreddy/petclinic-application-cicd:${env.BUILD_NUMBER}"
         REGISTRY_CREDENTIALS = credentials('docker-cred')
      }
       steps {
         script {
            	 def customImage = docker.build("${env.DOCKER_IMAGE}", "./docker")
                 docker.withRegistry('https://registry.hub.docker.com', 'docker-cred') {
                 customImage.push()
		      
		           }
                }
            }
	    }
    }
}
