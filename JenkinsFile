pipeline {
  agent any
    tools {
      maven 'Maven'
      jdk 'JDK11'
    }
	stages {
      stage('Build maven ') {
        steps {      
               bat 'mvn  clean install package'
              }
        }
     stage("build & SonarQube analysis") 
            steps {
              withSonarQubeEnv(credentialsId: 'sonarqube') {
                bat 'mvn clean package sonar:sonar'
              }
            }
     stage("Quality Gate") {
            steps {
              timeout(time: 1, unit: 'HOURS') {
                waitForQualityGate abortPipeline: true
              }
            }
          }
     /* stage('Copy Artifact') {
        steps {         
		     bat 'copy C:\\ProgramData\\Jenkins\\.jenkins\\workspace\\petcline-application\\target\\*.jar C:\\ProgramData\\Jenkins\\.jenkins\\workspace\\petcline-application\\docker'
                    }
                 }
      stage('Build and Push Docker Image') {
      
        steps {
         script {
            	 def customImage = docker.build('kavyapallamreddy/petclinic-application', "./docker")
                 docker.withRegistry('https://registry.hub.docker.com', 'docker-cred') {
                 customImage.push("${env.BUILD_NUMBER}")
		         bat 'docker run -d -p 8010:8080 -t kavyapallamreddy/petclinic-application:2'
		           }
                }
            }
          }*/
    }
}
