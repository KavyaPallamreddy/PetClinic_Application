pipeline {
	agent any
	  tools {
                 maven 'Maven'
                 jdk 'JDK11'
               }
	  environment {
		AWS_ACCOUNT_ID="268360024445"
		AWS_DEFAULT_REGION="us-west-2"
		IMAGE_REPO_NAME="petclinic-application"
		IMAGE_TAG="latest"
		REPOSITORY_URI = "${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com/${IMAGE_REPO_NAME}"
	            }

	  stages {

	      stage('Logging into AWS ECR') {		
		   steps {
			   
		       script {
			      
			      sh "aws ecr get-login-password --region ${AWS_DEFAULT_REGION} | docker login --username AWS --password-stdin ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com"
			       
			       
		       }

			}
	        }
              stage('Build maven ') {
                   steps { 
                     sh 'pwd'      
                     sh 'mvn  clean install package'
                    }
                 }
	     stage('Static code analysis'){
               steps{
                script{
                    withSonarQubeEnv(credentialsId: 'sonarqube') {
                        sh 'mvn clean package sonar:sonar'
                    }
                   }
                }
            }
        
              stage('Copy Artifact') {
                   steps { 
                     sh 'pwd'
		     sh 'cp -r target/*.jar docker'
                    }
                 }
         
              stage('Build docker image') {
                   steps {
                      script { 
			 sh "docker build -t ${IMAGE_REPO_NAME} ./docker"
			
			   }                     
                    }
              }
              // Uploading Docker images into AWS ECR
	      stage('Pushing to ECR') {
		   steps{
		       script {
			       sh "docker tag ${IMAGE_REPO_NAME}:${IMAGE_TAG} ${REPOSITORY_URI}:$IMAGE_TAG"
			       sh "docker push ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com/${IMAGE_REPO_NAME}:${IMAGE_TAG}"
			       
			       }
			    }
			}
		  /* Uploading Docker images into AWS ECR		
		      stage('Build and Push Docker Image') {
		       environment {
			 DOCKER_IMAGE= "kavyapallamreddy/petclinic-application-cicd:${env.BUILD_NUMBER}"
			 REGISTRY_CREDENTIALS = credentials('docker-cred')
		      }
		       steps {
			 script {
				 def customImage = docker.build("${env.DOCKER_IMAGE}", "./docker")
				 docker.withRegistry('https://registry.hub.docker.com', 'docker-cred') {
				 customImage.push()

					   }
				}
			    }
			    }*/
	    stage('Update Deployment File') {
        	steps {
            		script {
                	withCredentials([gitUsernamePassword(credentialsId: 'github', gitToolName: 'Default')]) {
                	sh """
			  git config user.email "kavyareddy41997@gmail.com"
			  git config user.name "KavyaPallamreddy"
			  sed -i "s/replaceImageRepo:replaceImageTag/${IMAGE_REPO_NAME}:${IMAGE_TAG}-${BUILD_NUMBER}/g" helm/petclinic/templates/deployment.yaml
			  git add helm/petclinic/templates/deployment.yaml
			  git commit -m "Update deployment image to version ${env.IMAGE_TAG}-${env.BUILD_NUMBER}"
			  git push -u origin main
		     """
           		 	}
            		}
       		 }
   	 }
          
	  }
}
